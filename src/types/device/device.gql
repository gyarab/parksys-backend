type Device {
  id: ID
  name: String!
  activated: Boolean!
  activatedAt: DateTime
  # Calculated
  activationQrUrl: String!
  activationPasswordExpiresAt: DateTime
  config: DeviceConfig!
}

enum DeviceType {
  IN
  OUT
}

type DeviceConfig {
  type: DeviceType!
  capturing: Boolean!
}

input NewDeviceInput {
  name: String!
}

input DeviceFilter {
  id: ID
  name: String
  activated: Boolean
  activatedAt: DateTime
}

input DeviceConfigUpdateInput {
  type: DeviceType
  capturing: Boolean
}

extend type Query {
  devices(filter: DeviceFilter): [Device]!
}

extend type Mutation {
  createDevice(input: NewDeviceInput!): Device!
  deviceRegenerateActivationPassword(id: ID!): Device!
  deleteDevice(id: ID!): Device!
  updateDeviceConfig(id: ID!, config: DeviceConfigUpdateInput!): Device!
}
