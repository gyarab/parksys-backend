## PARKING SESSION TYPES

type Check {
  time: DateTime!
  image: URL
}

type ParkingSession {
  id: ID!
  active: Boolean!
  checkIn: Check!
  checkOut: Check
  vehicle: Vehicle!
  appliedRules: [ParkingRule!]!
  finalFee: NonNegativeInt
}

## PARKING RULE TYPES

# ParkingRuleGroup (not yet) and all implementations of ParkingRule
union ParkingRuleSelector = ParkingRulePermitAccess | ParkingRuleTimedFee

enum VehicleFilterAction {
  EXCLUDE
  INCLUDE
}

# Filter for ParkingRules.
type VehicleFilter {
  id: ID!
  name: String!
  action: VehicleFilterAction!
  vehicles: [Vehicle!]!
}

input VehicleFilterCreateInput {
  name: String!
  action: VehicleFilterAction!
  vehicles: [ID!]
}

input VehicleFilterUpdateInput {
  name: String
  action: VehicleFilterAction
  vehicles: [ID!]
}

input VehicleSelectorInput {
  filter: ID
  singleton: VehicleSelectorEnum
}

enum VehicleSelectorEnum {
  ALL
  NONE
}

# Wrapper around VehicleSelectorEnum.
type VehicleSelectorSingleton {
  value: VehicleSelectorEnum!
}

union VehicleSelector = VehicleFilter | VehicleSelectorSingleton

interface ParkingRule {
  id: ID!
  name: String!
}

enum ParkingTimeUnit {
  MINUTE
  HOUR
}

type ParkingRuleTimedFee implements ParkingRule {
  id: ID!
  name: String!
  centsPerUnitTime: NonNegativeInt!
  unitTime: ParkingTimeUnit!
}

type ParkingRulePermitAccess implements ParkingRule {
  id: ID!
  name: String!
  permit: Boolean!
}

input ParkingRulePermitAccessCreateInput {
  name: String!
  permit: Boolean!
}

input ParkingRulePermitAccessUpdateInput {
  name: String
  permit: Boolean
  # addVehicles: [VehicleSelector!]
  # removeVehicles: [VehicleSelector!]
}

## PARKING RULE ASSIGNMENT TYPES

type ParkingRuleAssignment {
  rule: ParkingRule!
  start: Time!
  end: Time!
  vehicleSelectors: [VehicleSelector!]
  priority: NonNegativeInt!
}

type ParkingRuleAssignmentGroup {
  name: String!
  ruleAssignments: [ParkingRuleAssignment!]
}

type ParkingRuleDayAssignment {
  # Unique. Time is set to 0:00.
  day: DateTime!
  groups: [ParkingRuleAssignmentGroup!]
}

## QUERIES & MUTATIONS

extend type Query {
  rules: [ParkingRule!]
  vehicleFilters: [VehicleFilter!]
}

extend type Mutation {
  createVehicleFilter(input: VehicleFilterCreateInput!): VehicleFilter!
  updateVehicleFilter(id: ID!, input: VehicleFilterUpdateInput!): VehicleFilter!
  createParkingRulePermitAccess(
    input: ParkingRulePermitAccessCreateInput!
  ): ParkingRulePermitAccess!
  updateParkingRulePermitAccess(
    id: ID!
    input: ParkingRulePermitAccessUpdateInput!
  ): ParkingRulePermitAccess!
}
