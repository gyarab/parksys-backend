type Vehicle {
  id: ID!
  licensePlate: String!
  numParkingSessions: Int!
  parkingSessions: [ParkingSession!]
  totalPaidCents: NonNegativeInt
}

input VehicleCreateInput {
  licensePlate: String!
}

input VehicleSearchInput {
  licensePlate: String!
  # Default is 50, max is 100.
  limit: PositiveInt
  # Default is 1
  page: PositiveInt
}

type VehicleSearchResult {
  data: [Vehicle!]
  page: PositiveInt!
  limit: PositiveInt!
}

extend type Query {
  vehicles: [Vehicle!]
  vehicleSearch(search: VehicleSearchInput!): VehicleSearchResult!
}

extend type Mutation {
  createVehicle(input: VehicleCreateInput!): Vehicle!
  deleteVehicle(id: ID!): Vehicle!
  deleteVehicleByLicensePlate(licensePlate: String!): Vehicle!
}
