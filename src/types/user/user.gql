type User {
  id: ID!
  name: String!
  email: EmailAddress!
  permissions: [String]!
  authentications: [Authentication]
  refreshTokens: [RefreshToken]
  isAdmin: Boolean!
}

input UserSearchInput {
  name: String!
  limit: PositiveInt
  page: PositiveInt
}

input UserByEmailSearchInput {
  email: String!
  limit: PositiveInt
  page: PositiveInt
}

type UserSearchResult {
  data: [User!]
  page: PositiveInt!
  limit: PositiveInt!
}

extend type Query {
  currentUser: User!
  userSearch(search: UserSearchInput!): UserSearchResult!
  userSearchByEmail(search: UserByEmailSearchInput!): UserSearchResult!
}
